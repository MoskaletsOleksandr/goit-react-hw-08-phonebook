{"version":3,"file":"static/js/304.aca499d1.chunk.js","mappings":"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","sources":["components/common/Button/Button.jsx","components/common/Form/Form.styled.jsx","components/common/Form/Form.jsx","components/common/Input/Input.styled.jsx","components/common/Input/Input.jsx","components/common/Label/Label.styled.jsx","components/common/Label/Label.jsx","components/common/SectionTitle/SectionTitle.styled.jsx","components/common/SectionTitle/SectionTitle.jsx","components/common/Section/Section.styled.jsx","components/common/Section/Section.jsx","components/common/Modal/Modal.styled.jsx","components/common/Modal/Modal.jsx","components/modals/UpdateContact/UpdateContact.styled.jsx","components/modals/UpdateContact/UpdateContact.jsx","components/ContactForm/ContactForm.jsx","utils/contactUtils.js","components/ContactList/ContactList.styled.jsx","components/ContactList/Contact/Contact.styled.jsx","components/ContactList/Contact/Contact.jsx","components/ContactList/ContactList.jsx","utils/filterUtils.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/pages/ContactsPage/ContactsPage.styled.jsx","components/pages/ContactsPage/index.js","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({ children, onClick, disabled }) => {\n  return (\n    <ButtonStyled onClick={onClick} disabled={disabled}>\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    .isRequired,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { FormStyled } from './Form.styled';\n\nexport const Form = ({ children, onSubmit }) => {\n  return <FormStyled onSubmit={onSubmit}>{children}</FormStyled>;\n};\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const InputStyled = styled.input`\n  width: 100%;\n  max-width: 300px;\n  padding: 10px;\n  margin-top: 5px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 8px 0px #33333347;\n`;\n","import PropTypes from 'prop-types';\nimport { InputStyled } from './Input.styled';\n\nexport const Input = ({\n  value,\n  onChange,\n  type,\n  name,\n  pattern,\n  title,\n  required,\n}) => {\n  return (\n    <InputStyled\n      onChange={onChange}\n      value={value}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required={required}\n    ></InputStyled>\n  );\n};\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { LabelStyled } from './Label.styled';\n\nexport const Label = ({ children }) => {\n  return <LabelStyled>{children}</LabelStyled>;\n};\n\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;","import PropTypes from 'prop-types';\nimport { Title } from './SectionTitle.styled';\n\nexport const SectionTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  flex-basis: 33%;\n  padding: 20px;\n  border-radius: 4px;\n  background-color: rgba(245, 245, 245, 0.9);\n  text-align: center;\n\n  &:nth-of-type(2) {\n    flex-basis: 66%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n\nSection.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code !== 'Escape') {\n        return;\n      }\n      onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/common/Button/Button.styled';\n\nexport const ContentWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n`;\n\nexport const ContactInfo = styled.p`\n  margin-bottom: 0.5rem;\n\n  b {\n    font-weight: bold;\n  }\n`;\n\nexport const ConfirmationButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nexport const DeclineButton = styled(ButtonStyled)`\n  background-color: #ff0000;\n\n  &:hover,\n  &:focus {\n    background-color: #cc0000;\n    transform: ${({ disabled }) => (disabled ? 'none' : 'scale(1.05)')};\n    box-shadow: ${({ disabled }) =>\n      disabled\n        ? '0px 2px 4px rgba(0, 0, 0, 0.2)'\n        : '0px 4px 6px rgba(0, 0, 0, 0.3)'};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button } from 'components/common/Button';\nimport { Modal } from 'components/common/Modal';\nimport {\n  ConfirmationButtons,\n  ContactInfo,\n  ContentWrapper,\n  DeclineButton,\n  Title,\n} from './UpdateContact.styled';\n\nexport const UpdateContactModal = ({\n  closeModal,\n  existingContact,\n  formData,\n  updateContact,\n}) => {\n  const { name, number } = existingContact;\n  const theSameNumber = number === formData.number;\n\n  return (\n    <Modal onClose={closeModal}>\n      <ContentWrapper>\n        {!theSameNumber ? (\n          <>\n            <Title>Do you want to update this contact?</Title>\n            <ContactInfo>\n              The contact <b>{name}</b> already exists in your contact list with\n              the number <b>{number}</b>.\n            </ContactInfo>\n            <ContactInfo>\n              Do you want to replace the number of this contact with the number{' '}\n              <b>{formData.number}</b>?\n            </ContactInfo>\n            <ConfirmationButtons>\n              <Button onClick={updateContact}>Ok</Button>\n              <DeclineButton onClick={closeModal}>No</DeclineButton>\n            </ConfirmationButtons>\n          </>\n        ) : (\n          <>\n            <Title>You are trying to add the same contact</Title>\n\n            <ContactInfo>\n              The contact <b>{name}</b> already exists in your contact list with\n              the number <b>{number}</b>.\n            </ContactInfo>\n            <Button onClick={closeModal}>Ok</Button>\n          </>\n        )}\n      </ContentWrapper>\n    </Modal>\n  );\n};\n\nUpdateContactModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  existingContact: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  updateContact: PropTypes.func.isRequired,\n};\n","import { useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { checkContactExists } from 'utils/contactUtils';\nimport { Button } from 'components/common/Button';\nimport { Loader } from 'components/common/Loader';\nimport { Form } from 'components/common/Form';\nimport { Label } from 'components/common/Label';\nimport { Input } from 'components/common/Input';\nimport {\n  createNewContactThunk,\n  updateContactThunk,\n} from 'redux/contacts/thunks';\nimport { UpdateContactModal } from 'components/modals/UpdateContact';\n\nexport const ContactForm = () => {\n  const initialFormData = { name: '', number: '' };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [showModal, setShowModal] = useState(false);\n\n  const { items: contacts, isLoading } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const isAddContactButtonDisabled = useMemo(\n    () => formData.name === '' || formData.number === '',\n    [formData.name, formData.number]\n  );\n\n  const existingContact = useMemo(\n    () => checkContactExists(contacts, formData.name),\n    [contacts, formData.name]\n  );\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevFormData => ({ ...prevFormData, [name]: value }));\n  };\n\n  const handleUpdateContact = async () => {\n    dispatch(updateContactThunk({ id: existingContact.id, body: formData }));\n\n    resetForm();\n    toggleModal();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (existingContact) {\n      toggleModal();\n      return;\n    }\n\n    dispatch(createNewContactThunk(formData));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setFormData(initialFormData);\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            value={formData.name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            value={formData.number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\" disabled={isAddContactButtonDisabled}>\n          Add contact\n        </Button>\n      </Form>\n\n      {isLoading && <Loader />}\n      {showModal && (\n        <UpdateContactModal\n          closeModal={toggleModal}\n          updateContact={handleUpdateContact}\n          existingContact={existingContact}\n          formData={formData}\n        />\n      )}\n    </>\n  );\n};\n","export const checkContactExists = (contacts, name) =>\n  contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase()) ||\n  null;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  margin-top: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li``;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactInfo = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const ContactName = styled.span`\n  text-align: start;\n  display: block;\n  font-weight: bold;\n  margin-right: 5px;\n  word-break: break-all;\n\n  @media (min-width: 767px) {\n    width: 50%;\n  }\n`;\n\nexport const ContactNumber = styled.span`\n  display: block;\n  color: #666;\n  margin-right: 10px;\n  word-break: break-all;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 80px;\n  height: 28px;\n  border: none;\n  border-radius: 4px;\n  background-color: ${props => (props.disabled ? '#ccc' : '#cc3333')};\n  color: #fff;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n\n  &:hover {\n    background-color: ${props => (props.disabled ? '#ccc' : '#b32828')};\n    outline: none;\n    transform: ${props => (props.disabled ? 'none' : 'scale(1.05)')};\n    box-shadow: ${props =>\n      props.disabled ? 'none' : '0px 4px 6px rgba(0, 0, 0, 0.3)'};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactInfo,\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  ContactWrapper,\n  DeleteButton,\n} from './Contact.styled';\nimport { selectContacts } from 'redux/selectors';\nimport { deleteContactThunk } from 'redux/contacts/thunks';\n\nexport const Contact = ({ name, number, id }) => {\n  const { isLoading } = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <ContactItem>\n      <ContactWrapper>\n        <ContactInfo>\n          <ContactName>{name}:</ContactName>\n          <ContactNumber>{number}</ContactNumber>\n        </ContactInfo>\n        <DeleteButton\n          type=\"button\"\n          onClick={() => handleDeleteContact(id)}\n          disabled={isLoading}\n        >\n          Delete\n        </DeleteButton>\n      </ContactWrapper>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from './Contact/Contact';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { useEffect, useState, useMemo } from 'react';\nimport { SectionTitle } from 'components/common/SectionTitle';\nimport { getContactsThunk } from 'redux/contacts/thunks';\nimport { getFilteredContacts } from 'utils/filterUtils';\nimport { Button } from 'components/common/Button';\nimport { PaginationWrapper } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { items: contacts, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [endIndex, setEndIndex] = useState(1);\n  const contactsPerPage = 5;\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => prevPage - 1);\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const { filter } = useSelector(selectContacts);\n  const filteredContacts = useMemo(\n    () => getFilteredContacts(contacts, filter),\n    [contacts, filter]\n  );\n\n  const currentContacts = useMemo(() => {\n    const startIndex = (currentPage - 1) * contactsPerPage;\n    setEndIndex(startIndex + contactsPerPage);\n    return filteredContacts.slice(startIndex, endIndex);\n  }, [currentPage, filteredContacts, endIndex]);\n\n  useEffect(() => {\n    if (currentContacts.length === 0 && currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  }, [currentContacts, currentPage]);\n\n  return (\n    <>\n      {error && (\n        <SectionTitle title=\"Error loading... Check your connection or try later\" />\n      )}\n      <List>\n        {currentContacts.map(({ id, name, number }) => (\n          <Contact key={id} name={name} number={number} id={id} />\n        ))}\n      </List>\n      <PaginationWrapper>\n        <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n          Previous\n        </Button>\n        <Button\n          onClick={handleNextPage}\n          disabled={endIndex >= filteredContacts.length}\n        >\n          Next\n        </Button>\n      </PaginationWrapper>\n    </>\n  );\n};\n","export const getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n  margin-bottom: 5px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 300px;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 8px 0px #33333347;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\nimport { Label, Input, FilterContainer } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FilterContainer>\n      <Label>\n        Find contact by name\n        <Input onChange={handleFilterChange} />\n      </Label>\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n","import ContactsPage from './ContactsPage';\n\nexport default ContactsPage;\n","import { Section } from 'components/common/Section';\nimport { SectionTitle } from 'components/common/SectionTitle';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { PageWrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <PageWrapper>\n      <Section>\n        <SectionTitle title=\"Add a new contact\" as=\"h1\" />\n        <ContactForm />\n      </Section>\n      <Section>\n        <SectionTitle title=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </Section>\n    </PageWrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Button","children","onClick","disabled","FormStyled","styled","Form","onSubmit","InputStyled","Input","value","onChange","type","name","pattern","title","required","LabelStyled","Label","Title","SectionTitle","SectionStyled","Section","ModalBackdrop","ModalContent","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","ContentWrapper","ContactInfo","ConfirmationButtons","DeclineButton","ButtonStyled","UpdateContactModal","closeModal","existingContact","formData","updateContact","number","theSameNumber","ContactForm","initialFormData","useState","setFormData","showModal","setShowModal","useSelector","selectContacts","contacts","items","isLoading","dispatch","useDispatch","isAddContactButtonDisabled","useMemo","find","contact","toLowerCase","checkContactExists","handleChange","prevFormData","handleUpdateContact","updateContactThunk","id","body","resetForm","toggleModal","handleSubmit","preventDefault","createNewContactThunk","prevShowModal","I","Loader","List","PaginationWrapper","ContactItem","ContactWrapper","ContactName","ContactNumber","DeleteButton","props","Contact","deleteContactThunk","handleDeleteContact","ContactList","error","currentPage","setCurrentPage","endIndex","setEndIndex","getContactsThunk","filter","filteredContacts","normalizedFilter","includes","getFilteredContacts","currentContacts","startIndex","slice","length","prevPage","map","FilterContainer","Filter","setFilter","PageWrapper","as"],"sourceRoot":""}